apiVersion: elbv2.aws.m.upbound.io/v1beta1
kind: LB
metadata:
  name: lb-1
  namespace: demo
  labels:
    testing.upbound.io/elb: elbv2
spec:
  forProvider:
    subnetSelector:
      matchLabels:
        testing.upbound.io/elb: elbv2
    loadBalancerType: application
    name: lb-1
    region: us-east-1  
    securityGroupSelector:
      matchLabels:
        testing.upbound.io/elb: elbv2
  providerConfigRef:
    name: default
    kind: ProviderConfig
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  name: securitygroup-1
  namespace: demo
  labels:
    testing.upbound.io/elb: elbv2
spec:
  providerConfigRef:
    name: default
    kind: ProviderConfig
  forProvider:
    description: Allow HTT inbound traffic
    name: allow_HTTP
    region: us-east-1
    tags:
      Name: east
    vpcId: vpc-080cd38eecbd53182
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: SecurityGroupIngressRule
metadata:
  name: securitygroup-rule-1
  namespace: demo
  labels:
    testing.upbound.io/elb: elbv2
spec:
  providerConfigRef:
    name: default
    kind: ProviderConfig  
  forProvider:
    fromPort: 80
    toPort: 80
    ipProtocol: "-1"
    cidrIpv4: 0.0.0.0/0 
    referencedSecurityGroupIdSelector:
      matchLabels:
        testing.upbound.io/elb: elbv2
    region: us-east-1
    securityGroupIdSelector:
      matchLabels:
        testing.upbound.io/elb: elbv2                
---
apiVersion: ec2.aws.m.upbound.io/v1beta1
kind: SecurityGroupEgressRule
metadata:
  name: securitygroup-rule-2
  namespace: demo
  labels:
    testing.upbound.io/elb: elbv2
spec:
  providerConfigRef:
    name: default
    kind: ProviderConfig  
  forProvider:
    ipProtocol: "-1"
    cidrIpv4: 0.0.0.0/0
    region: us-east-1
    referencedSecurityGroupIdSelector:
      matchLabels:
        testing.upbound.io/elb: elbv2
    securityGroupIdSelector:
      matchLabels:
        testing.upbound.io/elb: elbv2        
     

